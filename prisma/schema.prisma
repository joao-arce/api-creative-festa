generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cashier {
  id                                  Int      @id(map: "cashiers_pk") @default(autoincrement())
  open_date                           String   @db.VarChar
  open_time                           String   @db.VarChar
  close_date                          String?  @db.VarChar
  close_time                          String?  @db.VarChar
  cash_desk_value                     Int?     @default(0)
  description                         String?  @db.VarChar
  id_user_open                        Int
  id_user_close                       Int?
  order_sum                           Int?     @default(0)
  users_cashiers_id_user_closeTousers User?   @relation("cashiers_id_user_closeTousers", fields: [id_user_close], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cashiers_fk_1")
  users_cashiers_id_user_openTousers  User    @relation("cashiers_id_user_openTousers", fields: [id_user_open], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cashiers_fk")
  orders                              Order[]

  @@map("cashiers")

}

model Category {
  id          Int        @id(map: "categories_pk") @default(autoincrement())
  description String     @db.VarChar
  products    Product[]

  @@map("categories")

}

model Item {
  id           Int      @id(map: "items_pk") @default(autoincrement())
  service_time String   @db.VarChar
  quantity     Int
  id_user      Int
  id_order     Int
  id_product   Int
  status       String   @db.VarChar
  order        Order    @relation(fields: [id_order], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "items_fk_2")
  product      Product  @relation(fields: [id_product], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "items_fk_1")
  user         User     @relation(fields: [id_user], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "items_fk")

  @@map("items")

}

model Order {
  id          Int      @id(map: "orders_pk") @default(autoincrement())
  number      Int
  client_name String?  @db.VarChar
  date        String   @db.VarChar
  id_ticket   Int
  adult_qtd   Int?     @default(0)
  kid_qtd     Int?     @default(0)
  status      String   @db.VarChar
  id_cashier  Int
  cashiers    Cashier @relation(fields: [id_cashier], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "orders_fk_1")
  ticket      Ticket  @relation(fields: [id_ticket], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "orders_fk")
  items       Item[]

  @@map("orders")

}

model Product {
  id           Int        @id(map: "products_pk") @default(autoincrement())
  name         String     @db.VarChar
  price        Int
  id_category  Int
  initial_date String     @db.VarChar
  final_date   String?    @db.VarChar
  category     Category @relation(fields: [id_category], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "products_fk")
  items        Item[]

  @@map("products")

}

model Ticket {
  id           Int      @id(map: "tickets_pk") @default(autoincrement())
  description  String?  @db.VarChar
  adult_price  Int?
  kid_price    Int?
  initial_date String   @db.VarChar
  final_date   String?  @db.VarChar
  combo_price  Int?     @default(0)
  orders       Order[]

  @@map("tickets")

}

model User {
  id                                     Int        @id(map: "users_pk") @unique(map: "users_id_idx") @default(autoincrement())
  name                                   String     @db.VarChar
  user_name                              String     @db.VarChar
  password                               String     @db.VarChar
  token                                  String?    @db.VarChar
  position                               Int
  cashiers_cashiers_id_user_closeTousers Cashier[] @relation("cashiers_id_user_closeTousers")
  cashiers_cashiers_id_user_openTousers  Cashier[] @relation("cashiers_id_user_openTousers")
  items                                  Item[]

  @@map("users")

}
